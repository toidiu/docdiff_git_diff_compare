   impl core::marker::Unpin for s2n_quic::provider::tls::rustls::rustls::internal::msgs::handshake::ServerNamePayload
 
 enum s2n_quic::provider::tls::rustls::rustls::internal::msgs::handshake::ServerNamePayload implements trait:
-  impl std::panic::RefUnwindSafe for s2n_quic::provider::tls::rustls::rustls::internal::msgs::handshake::ServerNamePayload
+  impl core::panic::unwind_safe::RefUnwindSafe for s2n_quic::provider::tls::rustls::rustls::internal::msgs::handshake::ServerNamePayload
 
 enum s2n_quic::provider::tls::rustls::rustls::internal::msgs::handshake::ServerNamePayload implements trait:
-  impl std::panic::UnwindSafe for s2n_quic::provider::tls::rustls::rustls::internal::msgs::handshake::ServerNamePayload
+  impl core::panic::unwind_safe::UnwindSafe for s2n_quic::provider::tls::rustls::rustls::internal::msgs::handshake::ServerNamePayload
 
 enum s2n_quic::provider::tls::rustls::rustls::internal::msgs::handshake::ServerNamePayload exports function:
   pub fn new_hostname(hostname: webpki::name::dns_name::DnsName) -> s2n_quic::provider::tls::rustls::rustls::internal::msgs::handshake::ServerNamePayload
 
+variant s2n_quic::provider::tls::rustls::rustls::internal::msgs::handshake::ServerNamePayload::HostName exports field:
+  0:
+  (s2n_quic::provider::tls::rustls::rustls::internal::msgs::base::PayloadU16, webpki::name::dns_name::DnsName)
+
+variant s2n_quic::provider::tls::rustls::rustls::internal::msgs::handshake::ServerNamePayload::Unknown exports field:
+  0:
+  s2n_quic::provider::tls::rustls::rustls::internal::msgs::base::Payload
+
 typedef s2n_quic::provider::tls::rustls::rustls::internal::msgs::handshake::ServerNameRequest exports typedef:
-  type ServerNameRequest = alloc::vec::Vec<s2n_quic::provider::tls::rustls::rustls::internal::msgs::handshake::ServerName, alloc::alloc::Global>;
+  pub type ServerNameRequest = alloc::vec::Vec<s2n_quic::provider::tls::rustls::rustls::internal::msgs::handshake::ServerName, alloc::alloc::Global>;
 
 struct s2n_quic::provider::tls::rustls::rustls::internal::msgs::handshake::SessionID implements trait:
   impl core::clone::Clone for s2n_quic::provider::tls::rustls::rustls::internal::msgs::handshake::SessionID
